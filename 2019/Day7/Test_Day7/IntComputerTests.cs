using NUnit.Framework;
using Day7;

namespace Day7_test
{
    public class IntComputerTests
    {
        [SetUp]
        public void Setup()
        {
        }

        [Test]
        public void BasicTest()
        {
            var computer = new IntComputer(new long[] {1, 0, 0, 0, 99});
            Assert.AreEqual(0, computer.Run());
        }

        [Test]
        public void ModeTest1()
        {
            var computer = new IntComputer(new long[] {1002, 4, 3, 4, 33});
            computer.Run();
            Assert.AreEqual(1002,computer.GetResult());
        }

        [Test]
        public void ModeTest2()
        {
            var computer = new IntComputer(new long[] {1002, 6, 3, 6, 4, 0, 33});
            Assert.AreEqual(1002, computer.Run());
        }

        [Test]
        public void ModeTest3()
        {
            var computer = new IntComputer(new long[] {1101, 100, -1, 4, 0});
            computer.Run();
            Assert.AreEqual(1101, computer.GetResult());
        }

        [Test]
        public void ModeTest4()
        {
            var computer = new IntComputer(new long[] {1101, 0, 0, 0, 03, 0, 04, 0, 99});
            Assert.AreEqual(700, computer.Run(700));
        }

        // The original Day 2 part 2 test
        [Test]
        public void Day2Part2Test()
        {
            for (long noun = 0; noun <= 99; noun++)
            {
                for (long verb = 0; verb <= 99; verb++)
                {
                    var computer = new IntComputer(new long[]
                    {
                        1, 12, 2, 3, 1, 1, 2, 3, 1, 3, 4, 3, 1, 5, 0, 3, 2, 10, 1, 19, 1, 19, 5, 23, 1, 23, 9, 27, 2,
                        27, 6, 31, 1, 31, 6, 35, 2, 35, 9, 39, 1, 6, 39, 43, 2, 10, 43, 47, 1, 47, 9, 51, 1, 51, 6, 55,
                        1, 55, 6, 59, 2, 59, 10, 63, 1, 6, 63, 67, 2, 6, 67, 71, 1, 71, 5, 75, 2, 13, 75, 79, 1, 10, 79,
                        83, 1, 5, 83, 87, 2, 87, 10, 91, 1, 5, 91, 95, 2, 95, 6, 99, 1, 99, 6, 103, 2, 103, 6, 107, 2,
                        107, 9, 111, 1, 111, 5, 115, 1, 115, 6, 119, 2, 6, 119, 123, 1, 5, 123, 127, 1, 127, 13, 131, 1,
                        2, 131, 135, 1, 135, 10, 0, 99, 2, 14, 0, 0
                    });
                    computer.SetNoun(noun);
                    computer.SetVerb(verb);
                    computer.Run();
                    if (computer.GetResult() == 19690720)
                    {
                        Assert.AreEqual(52, computer.GetNoun());
                        Assert.AreEqual(96, computer.GetVerb());
                        Assert.AreEqual(5296, 100 * noun + verb);
                    }
                }
            }
        }

        [Test]
        public void Day5Part1Test()
        {
            var computer = new IntComputer(new long[]
            {
                3, 225, 1, 225, 6, 6, 1100, 1, 238, 225, 104, 0, 1102, 46, 47, 225, 2, 122, 130, 224, 101, -1998, 224,
                224, 4, 224, 1002, 223, 8, 223, 1001, 224, 6, 224, 1, 224, 223, 223, 1102, 61, 51, 225, 102, 32, 92,
                224, 101, -800, 224, 224, 4, 224, 1002, 223, 8, 223, 1001, 224, 1, 224, 1, 223, 224, 223, 1101, 61, 64,
                225, 1001, 118, 25, 224, 101, -106, 224, 224, 4, 224, 1002, 223, 8, 223, 101, 1, 224, 224, 1, 224, 223,
                223, 1102, 33, 25, 225, 1102, 73, 67, 224, 101, -4891, 224, 224, 4, 224, 1002, 223, 8, 223, 1001, 224,
                4, 224, 1, 224, 223, 223, 1101, 14, 81, 225, 1102, 17, 74, 225, 1102, 52, 67, 225, 1101, 94, 27, 225,
                101, 71, 39, 224, 101, -132, 224, 224, 4, 224, 1002, 223, 8, 223, 101, 5, 224, 224, 1, 224, 223, 223,
                1002, 14, 38, 224, 101, -1786, 224, 224, 4, 224, 102, 8, 223, 223, 1001, 224, 2, 224, 1, 223, 224, 223,
                1, 65, 126, 224, 1001, 224, -128, 224, 4, 224, 1002, 223, 8, 223, 101, 6, 224, 224, 1, 224, 223, 223,
                1101, 81, 40, 224, 1001, 224, -121, 224, 4, 224, 102, 8, 223, 223, 101, 4, 224, 224, 1, 223, 224, 223,
                4, 223, 99, 0, 0, 0, 677, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1105, 0, 99999, 1105, 227, 247, 1105, 1,
                99999, 1005, 227, 99999, 1005, 0, 256, 1105, 1, 99999, 1106, 227, 99999, 1106, 0, 265, 1105, 1, 99999,
                1006, 0, 99999, 1006, 227, 274, 1105, 1, 99999, 1105, 1, 280, 1105, 1, 99999, 1, 225, 225, 225, 1101,
                294, 0, 0, 105, 1, 0, 1105, 1, 99999, 1106, 0, 300, 1105, 1, 99999, 1, 225, 225, 225, 1101, 314, 0, 0,
                106, 0, 0, 1105, 1, 99999, 1008, 677, 226, 224, 1002, 223, 2, 223, 1005, 224, 329, 1001, 223, 1, 223,
                107, 677, 677, 224, 102, 2, 223, 223, 1005, 224, 344, 101, 1, 223, 223, 1107, 677, 677, 224, 102, 2,
                223, 223, 1005, 224, 359, 1001, 223, 1, 223, 1108, 226, 226, 224, 1002, 223, 2, 223, 1006, 224, 374,
                101, 1, 223, 223, 107, 226, 226, 224, 1002, 223, 2, 223, 1005, 224, 389, 1001, 223, 1, 223, 108, 226,
                226, 224, 1002, 223, 2, 223, 1005, 224, 404, 1001, 223, 1, 223, 1008, 677, 677, 224, 1002, 223, 2, 223,
                1006, 224, 419, 1001, 223, 1, 223, 1107, 677, 226, 224, 102, 2, 223, 223, 1005, 224, 434, 1001, 223, 1,
                223, 108, 226, 677, 224, 102, 2, 223, 223, 1006, 224, 449, 1001, 223, 1, 223, 8, 677, 226, 224, 102, 2,
                223, 223, 1006, 224, 464, 1001, 223, 1, 223, 1007, 677, 226, 224, 1002, 223, 2, 223, 1006, 224, 479,
                1001, 223, 1, 223, 1007, 677, 677, 224, 1002, 223, 2, 223, 1005, 224, 494, 1001, 223, 1, 223, 1107, 226,
                677, 224, 1002, 223, 2, 223, 1006, 224, 509, 101, 1, 223, 223, 1108, 226, 677, 224, 102, 2, 223, 223,
                1005, 224, 524, 1001, 223, 1, 223, 7, 226, 226, 224, 102, 2, 223, 223, 1005, 224, 539, 1001, 223, 1,
                223, 8, 677, 677, 224, 1002, 223, 2, 223, 1005, 224, 554, 101, 1, 223, 223, 107, 677, 226, 224, 102, 2,
                223, 223, 1006, 224, 569, 1001, 223, 1, 223, 7, 226, 677, 224, 1002, 223, 2, 223, 1005, 224, 584, 1001,
                223, 1, 223, 1008, 226, 226, 224, 1002, 223, 2, 223, 1006, 224, 599, 101, 1, 223, 223, 1108, 677, 226,
                224, 102, 2, 223, 223, 1006, 224, 614, 101, 1, 223, 223, 7, 677, 226, 224, 102, 2, 223, 223, 1005, 224,
                629, 1001, 223, 1, 223, 8, 226, 677, 224, 1002, 223, 2, 223, 1006, 224, 644, 101, 1, 223, 223, 1007,
                226, 226, 224, 102, 2, 223, 223, 1005, 224, 659, 101, 1, 223, 223, 108, 677, 677, 224, 1002, 223, 2,
                223, 1006, 224, 674, 1001, 223, 1, 223, 4, 223, 99, 226
            });
            Assert.AreEqual(12896948, computer.Run(1));
        }

        [Test]
        public void Day5Part2Test()
        {
            var computer = new IntComputer(new long[]
            {
                3, 225, 1, 225, 6, 6, 1100, 1, 238, 225, 104, 0, 1102, 46, 47, 225, 2, 122, 130, 224, 101, -1998, 224,
                224, 4, 224, 1002, 223, 8, 223, 1001, 224, 6, 224, 1, 224, 223, 223, 1102, 61, 51, 225, 102, 32, 92,
                224, 101, -800, 224, 224, 4, 224, 1002, 223, 8, 223, 1001, 224, 1, 224, 1, 223, 224, 223, 1101, 61, 64,
                225, 1001, 118, 25, 224, 101, -106, 224, 224, 4, 224, 1002, 223, 8, 223, 101, 1, 224, 224, 1, 224, 223,
                223, 1102, 33, 25, 225, 1102, 73, 67, 224, 101, -4891, 224, 224, 4, 224, 1002, 223, 8, 223, 1001, 224,
                4, 224, 1, 224, 223, 223, 1101, 14, 81, 225, 1102, 17, 74, 225, 1102, 52, 67, 225, 1101, 94, 27, 225,
                101, 71, 39, 224, 101, -132, 224, 224, 4, 224, 1002, 223, 8, 223, 101, 5, 224, 224, 1, 224, 223, 223,
                1002, 14, 38, 224, 101, -1786, 224, 224, 4, 224, 102, 8, 223, 223, 1001, 224, 2, 224, 1, 223, 224, 223,
                1, 65, 126, 224, 1001, 224, -128, 224, 4, 224, 1002, 223, 8, 223, 101, 6, 224, 224, 1, 224, 223, 223,
                1101, 81, 40, 224, 1001, 224, -121, 224, 4, 224, 102, 8, 223, 223, 101, 4, 224, 224, 1, 223, 224, 223,
                4, 223, 99, 0, 0, 0, 677, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1105, 0, 99999, 1105, 227, 247, 1105, 1,
                99999, 1005, 227, 99999, 1005, 0, 256, 1105, 1, 99999, 1106, 227, 99999, 1106, 0, 265, 1105, 1, 99999,
                1006, 0, 99999, 1006, 227, 274, 1105, 1, 99999, 1105, 1, 280, 1105, 1, 99999, 1, 225, 225, 225, 1101,
                294, 0, 0, 105, 1, 0, 1105, 1, 99999, 1106, 0, 300, 1105, 1, 99999, 1, 225, 225, 225, 1101, 314, 0, 0,
                106, 0, 0, 1105, 1, 99999, 1008, 677, 226, 224, 1002, 223, 2, 223, 1005, 224, 329, 1001, 223, 1, 223,
                107, 677, 677, 224, 102, 2, 223, 223, 1005, 224, 344, 101, 1, 223, 223, 1107, 677, 677, 224, 102, 2,
                223, 223, 1005, 224, 359, 1001, 223, 1, 223, 1108, 226, 226, 224, 1002, 223, 2, 223, 1006, 224, 374,
                101, 1, 223, 223, 107, 226, 226, 224, 1002, 223, 2, 223, 1005, 224, 389, 1001, 223, 1, 223, 108, 226,
                226, 224, 1002, 223, 2, 223, 1005, 224, 404, 1001, 223, 1, 223, 1008, 677, 677, 224, 1002, 223, 2, 223,
                1006, 224, 419, 1001, 223, 1, 223, 1107, 677, 226, 224, 102, 2, 223, 223, 1005, 224, 434, 1001, 223, 1,
                223, 108, 226, 677, 224, 102, 2, 223, 223, 1006, 224, 449, 1001, 223, 1, 223, 8, 677, 226, 224, 102, 2,
                223, 223, 1006, 224, 464, 1001, 223, 1, 223, 1007, 677, 226, 224, 1002, 223, 2, 223, 1006, 224, 479,
                1001, 223, 1, 223, 1007, 677, 677, 224, 1002, 223, 2, 223, 1005, 224, 494, 1001, 223, 1, 223, 1107, 226,
                677, 224, 1002, 223, 2, 223, 1006, 224, 509, 101, 1, 223, 223, 1108, 226, 677, 224, 102, 2, 223, 223,
                1005, 224, 524, 1001, 223, 1, 223, 7, 226, 226, 224, 102, 2, 223, 223, 1005, 224, 539, 1001, 223, 1,
                223, 8, 677, 677, 224, 1002, 223, 2, 223, 1005, 224, 554, 101, 1, 223, 223, 107, 677, 226, 224, 102, 2,
                223, 223, 1006, 224, 569, 1001, 223, 1, 223, 7, 226, 677, 224, 1002, 223, 2, 223, 1005, 224, 584, 1001,
                223, 1, 223, 1008, 226, 226, 224, 1002, 223, 2, 223, 1006, 224, 599, 101, 1, 223, 223, 1108, 677, 226,
                224, 102, 2, 223, 223, 1006, 224, 614, 101, 1, 223, 223, 7, 677, 226, 224, 102, 2, 223, 223, 1005, 224,
                629, 1001, 223, 1, 223, 8, 226, 677, 224, 1002, 223, 2, 223, 1006, 224, 644, 101, 1, 223, 223, 1007,
                226, 226, 224, 102, 2, 223, 223, 1005, 224, 659, 101, 1, 223, 223, 108, 677, 677, 224, 1002, 223, 2,
                223, 1006, 224, 674, 1001, 223, 1, 223, 4, 223, 99, 226
            });
            Assert.AreEqual(7704130, computer.Run(5));
        }
        
    }
}